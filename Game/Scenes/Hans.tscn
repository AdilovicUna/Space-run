[gd_scene load_steps=5 format=2]

[ext_resource path="res://Characters/Hans/Hans.gltf" type="PackedScene" id=1]
[ext_resource path="res://Characters/Hans/HansRunning.tres" type="Animation" id=2]

[sub_resource type="GDScript" id=1]
script/source = "extends KinematicBody

onready var tunnels = get_node(\"../Tunnels\").get_children()
onready var score = get_node(\"../UI/Score\")
onready var ground = get_node(\"../Ground\")

var cur_tunnel = 0
var rand = RandomNumberGenerator.new()
export var speed = 25.0

func _physics_process(_delta):
	# making tunnels (and ground) infinite by moving them forward
	# after Hans passes them	
	var tunnel = tunnels[cur_tunnel]
	if translation.x < tunnel.translation.x - 2000:
		tunnel.translation.x -= 7500    # move tunnel ahead
		cur_tunnel = (cur_tunnel + 1) % tunnels.size()
	if translation.x < ground.translation.x - 2000:
		ground.translation.x -= 3000
	
	# updating score
	score._on_Meter_Passed()
	
	# Hans's movement
	var velocity = Vector3.LEFT * speed
	move_and_slide(velocity)
	
	# End game if Hans touches the trap
	for index in get_slide_count():
		var collision = get_slide_collision(index)
		if collision.collider.name.begins_with(\"Trap\"):
			game_over()

func _on_Main_ready():
	var trap_scenes = []
	for name in [\"TrapI\", \"TrapO\", \"TrapX\"]:
		trap_scenes.append(load(\"res://Scenes/Trap_scenes/\" + name + \".tscn\"))
	
	# Add num_of_traps random traps to each tunnel.
	for tunnel in tunnels:
		
		# NOTE:	
		# when the tunnels get bigger, the ranges of
		# num_of_traps and x will change. 
		# for now they are made so that in the worst case 
		# the last trap will still be inside of the tunnel
		
		# pick number of traps to be added
		var num_of_traps = 4
		#var div = tunnel.scale.y / num_of_traps
		var div = 50
		# pick x for the first trap
		var x = 200 - div
		
		for n in num_of_traps:
			var i = rand.randi_range(0, len(trap_scenes) - 1)
			var trap = trap_scenes[i].instance()
			trap.translation.x = x
			# add space between traps
			x -= div
			tunnel.add_child(trap)
			# rotate the trap under some angle
			var r = rand.randf_range(0,360)
			trap.rotate_x(r)

func game_over():
	queue_free()
"

[sub_resource type="CapsuleShape" id=2]

[node name="Hans" type="KinematicBody"]
collision_mask = 2
script = SubResource( 1 )

[node name="Pivot" type="Spatial" parent="."]

[node name="Hans" parent="Pivot" instance=ExtResource( 1 )]

[node name="AnimationPlayer2" type="AnimationPlayer" parent="Pivot/Hans"]
autoplay = "HansRunning"
anims/HansRunning = ExtResource( 2 )

[node name="CollisionShape" type="CollisionShape" parent="."]
transform = Transform( 2.98112, 0, 0, 0, -0.07764, 4.00904, 0, -2.51225, -0.182664, 0, 6.87551, 1.04777 )
shape = SubResource( 2 )
